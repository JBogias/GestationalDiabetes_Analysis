renv::snapshot()
library(dplyr)
renv::deactivate()
renv::activate()
renv::init(bioconductor = TRUE)
renv::snapshot()
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(tibble)
library(magrittr)
library(ggplot2)
library(AnnotationHub)
library(biomaRt)
library(enricher)
renv::snapshot()
renv::install("enricher")
install.packages("enricher")
BiocManager::install("enricher")
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(tibble)
library(magrittr)
library(ggplot2)
library(AnnotationHub)
library(biomaRt)
library(msigdbr)
library(here)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(tibble)
library(magrittr)
library(ggplot2)
library(AnnotationHub)
library(biomaRt)
library(msigdbr)
library(here)
# Chunk 3: annotations
# BiomaRt ----
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
#bm_filter <- universal %>% dplyr::filter(str_detect(gene_id, "ENSR"))
hsap_bm <- getBM(attributes = c("ensembl_gene_id",
"external_gene_name",
"entrezgene_id"),
mart = ensembl)
# Chunk 4
# Batch 1 analysis ----
placenta_data <- read_csv(here("data/counts/placenta_data_wgcna.csv"))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(tibble)
library(magrittr)
library(ggplot2)
library(AnnotationHub)
library(biomaRt)
library(msigdbr)
library(here)
# Chunk 3: annotations
# BiomaRt ----
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
#bm_filter <- universal %>% dplyr::filter(str_detect(gene_id, "ENSR"))
hsap_bm <- getBM(attributes = c("ensembl_gene_id",
"external_gene_name",
"entrezgene_id"),
mart = ensembl)
# Chunk 4
# Batch 1 analysis ----
placenta_data <- read_csv(here("data/placenta_data_wgcna.csv"))
topHubGenesInModuleAll <- read_csv(here("data/topHubGenesInModuleAll.csv"))
universe <- hsap_bm %>%
dplyr::filter(ensembl_gene_id %in% colnames(placenta_data)) %>%
dplyr::filter(!is.na(entrezgene_id))
# Chunk 5
hub_gene_entrez <- topHubGenesInModuleAll %>%
dplyr::select(gene_id, gene_name, module) %>%
inner_join(universe %>%
dplyr::rename("gene_id" = "ensembl_gene_id",
"gene_name" = "external_gene_name"),
by = c("gene_id", "gene_name"))
modules <- unique(topHubGenesInModuleAll$module)[1:9]
allMolFunction_one <- lapply(modules, function(x) {
list <- dplyr::filter(
topHubGenesInModuleAll,
module == x
)
enrichGO(
gene = list$gene_id,
OrgDb = org.Hs.eg.db,
universe = as.character(topHubGenesInModuleAll$gene_id),
keyType = "ENSEMBL",
ont = "MF",
pAdjustMethod = "BH",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05,
readable = TRUE
)
})
renv::install("clusterProfiler")
renv::snapshot()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(tibble)
library(magrittr)
library(ggplot2)
library(AnnotationHub)
library(biomaRt)
library(clusterProfiler)
library(msigdbr)
library(here)
# Chunk 3: annotations
# BiomaRt ----
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
#bm_filter <- universal %>% dplyr::filter(str_detect(gene_id, "ENSR"))
hsap_bm <- getBM(attributes = c("ensembl_gene_id",
"external_gene_name",
"entrezgene_id"),
mart = ensembl)
# Chunk 4
# Batch 1 analysis ----
placenta_data <- read_csv(here("data/placenta_data_wgcna.csv"))
topHubGenesInModuleAll <- read_csv(here("data/topHubGenesInModuleAll.csv"))
universe <- hsap_bm %>%
dplyr::filter(ensembl_gene_id %in% colnames(placenta_data)) %>%
dplyr::filter(!is.na(entrezgene_id))
# Chunk 5
hub_gene_entrez <- topHubGenesInModuleAll %>%
dplyr::select(gene_id, gene_name, module) %>%
inner_join(universe %>%
dplyr::rename("gene_id" = "ensembl_gene_id",
"gene_name" = "external_gene_name"),
by = c("gene_id", "gene_name"))
modules <- unique(topHubGenesInModuleAll$module)[1:9]
allMolFunction_one <- lapply(modules, function(x) {
list <- dplyr::filter(
topHubGenesInModuleAll,
module == x
)
enrichGO(
gene = list$gene_id,
OrgDb = org.Hs.eg.db,
universe = as.character(topHubGenesInModuleAll$gene_id),
keyType = "ENSEMBL",
ont = "MF",
pAdjustMethod = "BH",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05,
readable = TRUE
)
})
renv::install("org.Hs.eg.db")
renv::snapshot()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(tibble)
library(magrittr)
library(ggplot2)
library(AnnotationHub)
library(biomaRt)
library(org.Hs.eg.db)
library(clusterProfiler)
library(msigdbr)
library(here)
# Chunk 3: annotations
# BiomaRt ----
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
#bm_filter <- universal %>% dplyr::filter(str_detect(gene_id, "ENSR"))
hsap_bm <- getBM(attributes = c("ensembl_gene_id",
"external_gene_name",
"entrezgene_id"),
mart = ensembl)
# Chunk 4
# Batch 1 analysis ----
placenta_data <- read_csv(here("data/placenta_data_wgcna.csv"))
topHubGenesInModuleAll <- read_csv(here("data/topHubGenesInModuleAll.csv"))
universe <- hsap_bm %>%
dplyr::filter(ensembl_gene_id %in% colnames(placenta_data)) %>%
dplyr::filter(!is.na(entrezgene_id))
# Chunk 5
hub_gene_entrez <- topHubGenesInModuleAll %>%
dplyr::select(gene_id, gene_name, module) %>%
inner_join(universe %>%
dplyr::rename("gene_id" = "ensembl_gene_id",
"gene_name" = "external_gene_name"),
by = c("gene_id", "gene_name"))
modules <- unique(topHubGenesInModuleAll$module)[1:9]
allMolFunction_one <- lapply(modules, function(x) {
list <- dplyr::filter(
topHubGenesInModuleAll,
module == x
)
enrichGO(
gene = list$gene_id,
OrgDb = org.Hs.eg.db,
universe = as.character(topHubGenesInModuleAll$gene_id),
keyType = "ENSEMBL",
ont = "MF",
pAdjustMethod = "BH",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05,
readable = TRUE
)
})
names(allMolFunction_one) <- unique(modules)
allBiolFunction_one <- lapply(modules, function(x) {
list <- dplyr::filter(
topHubGenesInModuleAll,
module == x
)
enrichGO(
gene = list$gene_id,
OrgDb = org.Hs.eg.db,
universe = as.character(topHubGenesInModuleAll$gene_id),
keyType = "ENSEMBL",
ont = "BP",
pAdjustMethod = "BH",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05,
readable = TRUE
)
})
names(allBiolFunction_one) <- unique(modules)
allCelComponents_one <- lapply(modules, function(x) {
list <- dplyr::filter(
topHubGenesInModuleAll,
module == x
)
enrichGO(
gene = list$gene_id,
OrgDb = org.Hs.eg.db,
universe = as.character(topHubGenesInModuleAll$gene_id),
keyType = "ENSEMBL",
ont = "CC",
pAdjustMethod = "BH",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05,
readable = TRUE
)
})
names(allCelComponents_one) <- unique(modules)
m_df_H <- msigdbr(species = "Homo sapiens",
category = "H")
m_df_C2 <- msigdbr(species = "Homo sapiens",
category = "C2")
m_df_C3 <- msigdbr(species = "Homo sapiens",
category = "C3")
m_df_C5 <- msigdbr(species = "Homo sapiens",
category = "C5")
m_df_C7 <- msigdbr(species = "Homo sapiens",
category = "C7")
m_df_C8 <- msigdbr(species = "Homo sapiens",
category = "C8")
genesets <- list(m_df_H,
m_df_C2,
m_df_C3,
m_df_C5,
m_df_C7,
m_df_C8) %>%
set_names(c("m_df_H",
"m_df_C2",
"m_df_C3",
"m_df_C5",
"m_df_C7",
"m_df_C8"))
genesets <- lapply(genesets, function(x) {
dplyr::select(.data = x, gs_name, ensembl_gene) %>%
as.data.frame
})
genesets$m_df_C2KEGG <- m_df_C2 %>%
dplyr::select(gs_name,
ensembl_gene) %>%
dplyr::filter(str_detect(gs_name, "KEGG_")) %>%
as.data.frame()
genesets$m_df_C2R <- m_df_C2 %>%
dplyr::select(gs_name,
ensembl_gene) %>%
dplyr::filter(str_detect(gs_name, "REACTOME_")) %>%
as.data.frame()
module_enrichment <- list()
for(i in modules) {
module_enrichment[[i]] <- lapply(genesets, function(x) {
tryCatch({
enricher(gene = topHubGenesInModuleAll %>%
dplyr::filter(module == i) %>%
.[["gene_id"]],
TERM2GENE = x,
universe = as.character(topHubGenesInModuleAll$gene_id),
pvalueCutoff = 1,
qvalueCutoff = 1,
minGSSize = 5,
maxGSSize = 5000)  %>%
as_tibble() %>%
mutate(ID = gsub("HALLMARK_", "", ID)) %>%
mutate(ID = gsub("KEGG_", "", ID)) %>%
mutate(ID = gsub("REACTOME_", "", ID)) %>%
as_tibble()
}, error = function(e) {})
})
}
module_enrichment %>%
write_rds(here("data/module_gene_enrichment.rds"))
allC2sets <- lapply(modules, function(x) {
list <- dplyr::filter(
topHubGenesInModuleAll,
module == x
)
enricher(
gene = list$gene_id,
universe = as.character(topHubGenesInModuleAll$gene_id),
TERM2GENE = genesets$m_df_C2,
pAdjustMethod = "BH",
pvalueCutoff = 0.01,
qvalueCutoff = 0.05
)
})
names(allC2sets) <- modules
allC2KEGGsets <- lapply(modules, function(x) {
list <- dplyr::filter(
topHubGenesInModuleAll,
module == x
)
enricher(
gene = list$gene_id,
universe = as.character(topHubGenesInModuleAll$gene_id),
TERM2GENE = genesets$m_df_C2KEGG,
pAdjustMethod = "BH",
pvalueCutoff = 0.01,
qvalueCutoff = 0.05)
})
names(allC2KEGGsets) <- modules
allHallmarkSets <- lapply(modules, function(x) {
list <- dplyr::filter(
topHubGenesInModuleAll,
module == x
)
enricher(
gene = list$gene_id,
universe = as.character(topHubGenesInModuleAll$gene_id),
TERM2GENE = genesets$m_df_H,
pAdjustMethod = "BH",
pvalueCutoff = 0.01,
qvalueCutoff = 0.05)
}
)
names(allHallmarkSets) <- modules
allC2Rsets <- lapply(modules, function(x) {
list <- dplyr::filter(
topHubGenesInModuleAll,
module == x
)
enricher(
gene = list$gene_id,
universe = as.character(topHubGenesInModuleAll$gene_id),
TERM2GENE = genesets$m_df_C2R,
pAdjustMethod = "BH",
pvalueCutoff = 0.01,
qvalueCutoff = 0.05)
}
)
names(allC2Rsets) <- modules
# Chunk 6
module_enrichment_test <- module_enrichment
for(i in modules) {
for(j in names(genesets)) {
message(paste0("Starting module ", i, "; Geneset ", j))
for(k in 1:length(module_enrichment_test[[i]][[j]][["geneID"]])) {
module_enrichment_test[[i]][[j]][["geneID"]][k] <- module_enrichment_test[[i]][[j]][["geneID"]][k] %>%
str_split("/") %>%
as.data.frame() %>%
set_colnames("gene_id") %>%
left_join(topHubGenesInModuleAll %>%
dplyr::select(gene_id, gene_name), by = "gene_id") %>%
dplyr::select("gene_name") %>%
as.character() %>%
str_remove("c\\(") %>%
str_remove_all('\"') %>%
str_remove("\n") %>%
str_remove("\\)")
}
}
}
write_rds(module_enrichment_test,
here("data/module_enrichment_geneNames.rds"))
# Chunk 7
module_enrichment$turquoise$m_df_H %>%
dplyr::rename("nGenes" = "Count",
"Gene Set" = "ID") %>%
dplyr::mutate(GeneRatio = paste0("'", GeneRatio),
BgRatio = paste0("'", BgRatio)) %>%
write_csv(here("data/tableS6_turquouse_hallmark.csv"))
module_enrichment$turquoise$m_df_C2KEGG %>%
dplyr::rename("nGenes" = "Count",
"Gene Set" = "ID") %>%
dplyr::mutate(GeneRatio = paste0("'", GeneRatio),
BgRatio = paste0("'", BgRatio)) %>%
write_csv(here("data/tableS6_turquouse_KEGG.csv"))
# Chunk 8
module_enrichment$purple$m_df_H %>%
dplyr::rename("nGenes" = "Count",
"Gene Set" = "ID") %>%
dplyr::mutate(GeneRatio = paste0("'", GeneRatio),
BgRatio = paste0("'", BgRatio)) %>%
write_csv(here("data/tableS7_purple_hallmark.csv"))
module_enrichment$purple$m_df_C2KEGG %>%
dplyr::rename("nGenes" = "Count",
"Gene Set" = "ID") %>%
dplyr::mutate(GeneRatio = paste0("'", GeneRatio),
BgRatio = paste0("'", BgRatio)) %>%
write_csv(here("data/tableS7_purple_KEGG.csv"))
module_enrichment_test
module_enrichment_test$turquoise$m_df_H
renv::install("DT")
renv::snapshot()
renv::install("rmdformats")
renv::install("yaml")
renv::snapshot()
