modules <- topHubGenesInModuleAll$module %>% unique()
modules <- modules[!modules %in% "grey"]
# Chunk 4: module_genes_for_loop
genes_in_module <- topHubGenesInModuleAll %>%
dplyr::filter(module == "turquoise")
high_connect <- genes_in_module %>%
dplyr::arrange(desc(Connectivity.kWithin)) %>%
top_n(n = 10, wt = Connectivity.kWithin)
outcome_data <- placenta_data %>%
t() %>%
cpm(log = TRUE) %>%
as.data.frame() %>%
rownames_to_column(var = "gene_id") %>%
as_tibble() %>%
pivot_longer(cols = pd$ID,
names_to = "ID",
values_to = "logCPM") %>%
left_join(pd %>%
dplyr::select("ID", "Outcome"),
by = "ID") %>%
dplyr::filter(gene_id %in% high_connect$gene_id)
outcome_gene_plot <- outcome_data %>%
ggplot(aes(x = Outcome, y = logCPM)) +
geom_violin(fill = "turquoise") +
geom_boxplot(width = 0.1,
fill = "royalblue",
colour = "black") +
labs(x = "Pregnancy Outcome",
y = "Gene Counts (log2 CPM)") +
theme_bw() +
theme(axis.text = element_text(colour = "black",
size = 11),
axis.title = element_text(colour = "black",
size = 13))
outcome_gene_plot
# Chunk 5
ggsave(filename = "supp_fig_turquoise_hub_genes.png",
plot = outcome_gene_plot,
device = "png",
path = here("figures/"),
height = 2000,
width = 2500,
units = "px",
dpi = 300)
# Chunk 6
genes_in_module <- topHubGenesInModuleAll %>%
dplyr::filter(module == "purple")
high_connect <- genes_in_module %>%
dplyr::arrange(desc(Connectivity.kWithin)) %>%
top_n(n = 10, wt = Connectivity.kWithin)
bmi_data <- placenta_data %>%
t() %>%
cpm(log = TRUE) %>%
as.data.frame() %>%
rownames_to_column(var = "gene_id") %>%
as_tibble() %>%
pivot_longer(cols = pd$ID,
names_to = "ID",
values_to = "logCPM") %>%
left_join(pd %>%
dplyr::select("ID", "BMI_cat"),
by = "ID") %>%
dplyr::filter(gene_id %in% high_connect$gene_id) %>%
mutate(BMI_cat = factor(BMI_cat,
levels = c("Normal", "Overweight", "Obese"))
)
bmi_gene_plot <- bmi_data %>%
ggplot(aes(x = BMI_cat, y = logCPM)) +
geom_violin(fill = "purple") +
geom_boxplot(width = 0.1,
fill = "magenta",
colour = "black") +
labs(x = "Body Mass Index",
y = "Gene Counts (log2 CPM)") +
theme_bw() +
theme(axis.text = element_text(colour = "black",
size = 11),
axis.title = element_text(colour = "black",
size = 13))
bmi_gene_plot
# Chunk 7
ggsave(filename = "supp_fig_purple_hub_genes.png",
plot = bmi_gene_plot,
device = "png",
path = here("figures/"),
height = 2000,
width = 2500,
units = "px",
dpi = 300)
# Chunk 8
hub_gene_expr <- placenta_data %>%
cpm(log = TRUE) %>%
as.data.frame() %>%
t() %>%
as.data.frame() %>%
rownames_to_column("gene_id") %>%
pivot_longer(cols = colnames(.)[-1],
names_to = "ID",
values_to = "counts") %>%
left_join(pd,
by = "ID") %>%
dplyr::mutate(BMI_cat = factor(BMI_cat,
levels = c("Normal", "Overweight", "Obese")),
Outcome = factor(Outcome, levels = c("Uncomplicated", "GDM")),
metabolicSyndrome = factor(metabolicSyndrome,
levels = c("Yes", "No")),
Smoking = case_when(Smoking == "Yes" ~ "Smoker",
.default = "Non-Smoker")) %>%
left_join(topHubGenesInModuleAll,
by = "gene_id") %>%
dplyr::rename("Sample Cohort" = "Cohort",
"Maternal Age (years)" = "Age",
"Fetal Sex" = "FetalSex",
"Gestational Age (weeks)" = "GestationalAge",
"Pregnancy Outcome" = "Outcome",
"Metabolic Syndrome" = "metabolicSyndrome",
"Treatment for Gestational Diabetes Mellitus" = "Treatment",
"Body Mass Index" = "BMI",
"Body Mass Index Category" = "BMI_cat",
"Birth Weight (grams)" = "Birthweight")
num_traits <- c("Sample Cohort", "Fetal Sex", "Pregnancy Outcome",
"Metabolic Syndrome",
"Treatment for Gestational Diabetes Mellitus",
"Ethnicity", "Smoking",
"Body Mass Index Category")
# Chunk 9
for(i in modules[!modules %in% c("black", "blue", "brown")]) {
for(j in num_traits) {
top_hub <- topHubGenesInModuleAll %>%
dplyr::filter(module == i) %>%
dplyr::arrange(desc(Connectivity.kWithin)) %>%
head(10)
hub_plot <- hub_gene_expr %>%
dplyr::filter(gene_id %in% top_hub$gene_id) %>%
ggplot(aes(x = .data[[j]], y = counts)) +
geom_violin(colour = "grey30", fill = i, alpha = 0.8) +
geom_quasirandom(colour = "black", width = 0.1, size = 1.5) +
labs(y = "Gene Expression (log2 CPM)",
x = j) +
facet_wrap(~ gene_name,
ncol = 5,
nrow = 2) +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 16),
axis.text = element_text(colour = "black", size = 12),
strip.text = element_text(colour = "black",
size = 14, face = "bold"),
strip.background = element_rect(fill = i))
ggsave(filename = paste0(i, "_hub_gene_expr.png"),
plot = hub_plot,
device = "png",
path = here(paste0("figures/", j, "/")),
height = 25,
width = 35,
units = "cm",
dpi = 300)
}
}
cont_traits
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(rmdformats)
library(rmarkdown)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(tibble)
library(ggplot2)
library(magrittr)
library(ggbeeswarm)
library(cowplot)
library(edgeR)
library(here)
placenta_data <- read_csv(here("data/placenta_data_wgcna.csv")) %>%
column_to_rownames("sample_id")
topHubGenesInModuleAll <- read_csv(here("data/topHubGenesInModuleAll.csv"))
pd <- read_csv(here("data/metadata.csv"))
# Chunk 3: select_module
modules <- topHubGenesInModuleAll$module %>% unique()
modules <- modules[!modules %in% "grey"]
# Chunk 4: module_genes_for_loop
genes_in_module <- topHubGenesInModuleAll %>%
dplyr::filter(module == "turquoise")
high_connect <- genes_in_module %>%
dplyr::arrange(desc(Connectivity.kWithin)) %>%
top_n(n = 10, wt = Connectivity.kWithin)
outcome_data <- placenta_data %>%
t() %>%
cpm(log = TRUE) %>%
as.data.frame() %>%
rownames_to_column(var = "gene_id") %>%
as_tibble() %>%
pivot_longer(cols = pd$ID,
names_to = "ID",
values_to = "logCPM") %>%
left_join(pd %>%
dplyr::select("ID", "Outcome"),
by = "ID") %>%
dplyr::filter(gene_id %in% high_connect$gene_id)
outcome_gene_plot <- outcome_data %>%
ggplot(aes(x = Outcome, y = logCPM)) +
geom_violin(fill = "turquoise") +
geom_boxplot(width = 0.1,
fill = "royalblue",
colour = "black") +
labs(x = "Pregnancy Outcome",
y = "Gene Counts (log2 CPM)") +
theme_bw() +
theme(axis.text = element_text(colour = "black",
size = 11),
axis.title = element_text(colour = "black",
size = 13))
outcome_gene_plot
# Chunk 5
ggsave(filename = "supp_fig_turquoise_hub_genes.png",
plot = outcome_gene_plot,
device = "png",
path = here("figures/"),
height = 2000,
width = 2500,
units = "px",
dpi = 300,
create.dir = TRUE)
# Chunk 6
genes_in_module <- topHubGenesInModuleAll %>%
dplyr::filter(module == "purple")
high_connect <- genes_in_module %>%
dplyr::arrange(desc(Connectivity.kWithin)) %>%
top_n(n = 10, wt = Connectivity.kWithin)
bmi_data <- placenta_data %>%
t() %>%
cpm(log = TRUE) %>%
as.data.frame() %>%
rownames_to_column(var = "gene_id") %>%
as_tibble() %>%
pivot_longer(cols = pd$ID,
names_to = "ID",
values_to = "logCPM") %>%
left_join(pd %>%
dplyr::select("ID", "BMI_cat"),
by = "ID") %>%
dplyr::filter(gene_id %in% high_connect$gene_id) %>%
mutate(BMI_cat = factor(BMI_cat,
levels = c("Normal", "Overweight", "Obese"))
)
bmi_gene_plot <- bmi_data %>%
ggplot(aes(x = BMI_cat, y = logCPM)) +
geom_violin(fill = "purple") +
geom_boxplot(width = 0.1,
fill = "magenta",
colour = "black") +
labs(x = "Body Mass Index",
y = "Gene Counts (log2 CPM)") +
theme_bw() +
theme(axis.text = element_text(colour = "black",
size = 11),
axis.title = element_text(colour = "black",
size = 13))
bmi_gene_plot
# Chunk 7
ggsave(filename = "supp_fig_purple_hub_genes.png",
plot = bmi_gene_plot,
device = "png",
path = here("figures/"),
height = 2000,
width = 2500,
units = "px",
dpi = 300,
create.dir = TRUE)
# Chunk 8
hub_gene_expr <- placenta_data %>%
cpm(log = TRUE) %>%
as.data.frame() %>%
t() %>%
as.data.frame() %>%
rownames_to_column("gene_id") %>%
pivot_longer(cols = colnames(.)[-1],
names_to = "ID",
values_to = "counts") %>%
left_join(pd,
by = "ID") %>%
dplyr::mutate(BMI_cat = factor(BMI_cat,
levels = c("Normal", "Overweight", "Obese")),
Outcome = factor(Outcome, levels = c("Uncomplicated", "GDM")),
metabolicSyndrome = factor(metabolicSyndrome,
levels = c("Yes", "No")),
Smoking = case_when(Smoking == "Yes" ~ "Smoker",
.default = "Non-Smoker")) %>%
left_join(topHubGenesInModuleAll,
by = "gene_id") %>%
dplyr::rename("Sample Cohort" = "Cohort",
"Maternal Age (years)" = "Age",
"Fetal Sex" = "FetalSex",
"Gestational Age (weeks)" = "GestationalAge",
"Pregnancy Outcome" = "Outcome",
"Metabolic Syndrome" = "metabolicSyndrome",
"Treatment for Gestational Diabetes Mellitus" = "Treatment",
"Body Mass Index" = "BMI",
"Body Mass Index Category" = "BMI_cat",
"Birth Weight (grams)" = "Birthweight")
num_traits <- c("Sample Cohort", "Fetal Sex", "Pregnancy Outcome",
"Metabolic Syndrome",
"Treatment for Gestational Diabetes Mellitus",
"Ethnicity", "Smoking",
"Body Mass Index Category")
# Chunk 9
for(i in modules[!modules %in% c("black", "blue", "brown")]) {
for(j in num_traits) {
top_hub <- topHubGenesInModuleAll %>%
dplyr::filter(module == i) %>%
dplyr::arrange(desc(Connectivity.kWithin)) %>%
head(10)
hub_plot <- hub_gene_expr %>%
dplyr::filter(gene_id %in% top_hub$gene_id) %>%
ggplot(aes(x = .data[[j]], y = counts)) +
geom_violin(colour = "grey30", fill = i, alpha = 0.8) +
geom_quasirandom(colour = "black", width = 0.1, size = 1.5) +
labs(y = "Gene Expression (log2 CPM)",
x = j) +
facet_wrap(~ gene_name,
ncol = 5,
nrow = 2) +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 16),
axis.text = element_text(colour = "black", size = 12),
strip.text = element_text(colour = "black",
size = 14, face = "bold"),
strip.background = element_rect(fill = i))
ggsave(filename = paste0(i, "_hub_gene_expr.png"),
plot = hub_plot,
device = "png",
path = here(paste0("figures/", j, "/")),
height = 25,
width = 35,
units = "cm",
dpi = 300,
create.dir = TRUE)
}
}
for(i in modules[modules %in% c("blue", "brown")]) {
for(j in num_traits) {
top_hub <- topHubGenesInModuleAll %>%
dplyr::filter(module == i) %>%
dplyr::arrange(desc(Connectivity.kWithin)) %>%
head(10)
hub_plot <- hub_gene_expr %>%
dplyr::filter(gene_id %in% top_hub$gene_id) %>%
ggplot(aes(x = .data[[j]], y = counts)) +
geom_violin(colour = "grey30", fill = i, alpha = 0.6) +
geom_quasirandom(colour = "black", width = 0.1, size = 1.5) +
labs(y = "Gene Expression (log2 CPM)",
x = "") +
facet_wrap(~ gene_name,
ncol = 5,
nrow = 2) +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 16),
axis.text = element_text(colour = "black", size = 12),
strip.text = element_text(colour = "white",
size = 14, face = "bold"),
strip.background = element_rect(fill = i))
ggsave(filename = paste0(i, "_hub_gene_expr.png"),
plot = hub_plot,
device = "png",
path = here(paste0("figures/", j, "/")),
height = 25,
width = 35,
units = "cm",
dpi = 300,
create.dir = TRUE)
}
}
for(i in modules[modules == "black"]) {
for(j in num_traits) {
top_hub <- topHubGenesInModuleAll %>%
dplyr::filter(module == i) %>%
dplyr::arrange(desc(Connectivity.kWithin)) %>%
head(10)
hub_plot <- hub_gene_expr %>%
dplyr::filter(gene_id %in% top_hub$gene_id) %>%
ggplot(aes(x = .data[[j]], y = counts)) +
geom_violin(colour = "black", fill = i, alpha = 0.4) +
geom_quasirandom(colour = "black", width = 0.1, size = 1.5) +
labs(y = "Gene Expression (log2 CPM)",
x = "") +
facet_wrap(~ gene_name,
ncol = 5,
nrow = 2) +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 16),
axis.text = element_text(colour = "black", size = 12),
strip.text = element_text(colour = "white",
size = 14, face = "bold"),
strip.background = element_rect(fill = i))
ggsave(filename = paste0(i, "_hub_gene_expr.png"),
plot = hub_plot,
device = "png",
path = here(paste0("figures/", j, "/")),
height = 25,
width = 35,
units = "cm",
dpi = 300,
create.dir = TRUE)
}
}
hub_plot
# Chunk 10
cont_traits <- c("Maternal Age (years)", "Gestational Age (weeks)",
"Body Mass Index", "Birth Weight (grams)")
# Chunk 11
for(i in modules[!modules %in% c("black", "blue", "brown")]) {
for(j in cont_traits) {
top_hub <- topHubGenesInModuleAll %>%
dplyr::filter(module == i) %>%
dplyr::arrange(desc(Connectivity.kWithin)) %>%
head(10)
hub_plot <- hub_gene_expr %>%
dplyr::filter(gene_id %in% top_hub$gene_id) %>%
ggplot(aes(x = .data[[j]], y = counts)) +
geom_point(colour = i, size = 2) +
geom_smooth(colour = i, fill = i) +
labs(y = "Gene Expression (log2 CPM)",
x = "") +
facet_wrap(~ gene_name,
ncol = 5,
nrow = 2) +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 16),
axis.text = element_text(colour = "black", size = 12),
strip.text = element_text(colour = "black",
size = 14, face = "bold"),
strip.background = element_rect(fill = i))
ggsave(filename = paste0(i, "_hub_gene_expr.png"),
plot = hub_plot,
device = "png",
path = here(paste0("figures/", j, "/")),
height = 25,
width = 35,
units = "cm",
dpi = 300,
create.dir = TRUE)
}
}
for(i in modules[modules %in% c("blue", "brown")]) {
for(j in num_traits) {
top_hub <- topHubGenesInModuleAll %>%
dplyr::filter(module == i) %>%
dplyr::arrange(desc(Connectivity.kWithin)) %>%
head(10)
hub_plot <- hub_gene_expr %>%
dplyr::filter(gene_id %in% top_hub$gene_id) %>%
ggplot(aes(x = .data[[j]], y = counts)) +
geom_point(colour = i, size = 2) +
geom_smooth(colour = i, fill = i) +
labs(y = "Gene Expression (log2 CPM)",
x = "") +
facet_wrap(~ gene_name,
ncol = 5,
nrow = 2) +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 16),
axis.text = element_text(colour = "black", size = 12),
strip.text = element_text(colour = "white",
size = 14, face = "bold"),
strip.background = element_rect(fill = i))
ggsave(filename = paste0(i, "_hub_gene_expr.png"),
plot = hub_plot,
device = "png",
path = here(paste0("figures/", j, "/")),
height = 25,
width = 35,
units = "cm",
dpi = 300,
create.dir = TRUE)
}
}
for(i in modules[modules == "black"]) {
for(j in num_traits) {
top_hub <- topHubGenesInModuleAll %>%
dplyr::filter(module == i) %>%
dplyr::arrange(desc(Connectivity.kWithin)) %>%
head(10)
hub_plot <- hub_gene_expr %>%
dplyr::filter(gene_id %in% top_hub$gene_id) %>%
ggplot(aes(x = .data[[j]], y = counts)) +
geom_point(colour = i, size = 2) +
geom_smooth(colour = i, fill = i) +
labs(y = "Gene Expression (log2 CPM)",
x = "") +
facet_wrap(~ gene_name,
ncol = 5,
nrow = 2) +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 16),
axis.text = element_text(colour = "black", size = 12),
strip.text = element_text(colour = "white",
size = 14, face = "bold"),
strip.background = element_rect(fill = i))
ggsave(filename = paste0(i, "_hub_gene_expr.png"),
plot = hub_plot,
device = "png",
path = here(paste0("figures/", j, "/")),
height = 25,
width = 35,
units = "cm",
dpi = 300,
create.dir = TRUE)
}
}
hub_plot
