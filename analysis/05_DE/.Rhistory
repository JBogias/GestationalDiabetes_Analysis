renv::install("renv")
renv::init(bioconductor = TRUE)
renv::snapshot()
library(dplyr)
library(readr)
library(stringr)
library(tibble)
library(tidyr)
library(magrittr)
library(cowplot)
library(here)
renv::snapshot()
library(edgeR)
renv::install("edgeR")
renv::snapshot()
renv::install("rmdformats")
renv::install("rmarkdown")
renv::snapshot()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(rmarkdown)
library(rmdformats)
library(dplyr)
library(readr)
library(stringr)
library(tibble)
library(tidyr)
library(magrittr)
library(edgeR)
library(cowplot)
library(here)
source(here("R/plot_bmi.R"))
source(here("R/plot_de.R"))
source(here("R/make_dgelist.R"))
source(here("R/tx_aggregate_gene.R"))
# Chunk 3
tx_counts <- read_csv(here("data/tx_counts.csv"))
gene_txp_anno <- read_csv(here("data/gene_txp_anno.csv.gz"))
pd <- read_csv(here("data/metadata.csv"))
gene_counts <- tx_aggregate_gene(counts = tx_counts,
anno = gene_txp_anno) %>%
round(0)
dgelist <- make_dgelist(counts = gene_counts,
metadata = pd,
annotation = gene_txp_anno)
# Chunk 4: BMI_numbers
plot_bmi(pd)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(rmarkdown)
library(rmdformats)
library(dplyr)
library(readr)
library(stringr)
library(tibble)
library(tidyr)
library(magrittr)
library(edgeR)
library(ggplot2)
library(cowplot)
library(here)
source(here("R/plot_bmi.R"))
source(here("R/plot_de.R"))
source(here("R/make_dgelist.R"))
source(here("R/tx_aggregate_gene.R"))
# Chunk 3
tx_counts <- read_csv(here("data/tx_counts.csv"))
gene_txp_anno <- read_csv(here("data/gene_txp_anno.csv.gz"))
pd <- read_csv(here("data/metadata.csv"))
gene_counts <- tx_aggregate_gene(counts = tx_counts,
anno = gene_txp_anno) %>%
round(0)
dgelist <- make_dgelist(counts = gene_counts,
metadata = pd,
annotation = gene_txp_anno)
# Chunk 4: BMI_numbers
plot_bmi(pd)
# Chunk 5: designMatrix
designMatrix <- model.matrix(
~ Outcome + Cohort,
data = dgelist$samples %>%
mutate(
Outcome = factor(Outcome, levels = c("Uncomplicated", "GDM"))
)
)
colnames(designMatrix) <- colnames(designMatrix) %>%
str_remove("Outcome")
# Chunk 6: estCommonDisp
dgelist <- estimateCommonDisp(dgelist, design = designMatrix)
# Chunk 7: set_thresholds
lambda <- 1.4
alpha <- 0.05
# Chunk 8: glmFit
gdmGenes <- glmFit(dgelist,
design = designMatrix) %>%
glmTreat(coef = "GDM",
lfc = log2(lambda)) %>%
topTags(n = Inf) %>%
.[["table"]] %>%
as_tibble() %>%
dplyr::mutate(DE = FDR < alpha)
gdmGenes <- gdmGenes %>%
dplyr::filter(!gene_name %in% "hsa-mir-6723")
gdm_sig <- gdmGenes %>%
dplyr::filter(FDR < 0.05 & abs(logFC) > 1)
# Chunk 9
de_plot_tile <- plot_de(de_genes = gdmGenes, dgelist = dgelist, type = "tile")
# Chunk 11
de_plot_bar <- plot_de(de_genes = gdmGenes, dgelist = dgelist, type = "bar")
renv::restore()
renv::status()
renv::snapshot()
