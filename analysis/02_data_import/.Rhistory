?reframe
renv::install("renv")
library(rmdformats)
library(rmarkdown)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
renv::snapshot
renv::snapshot()
renv::install("yaml")
library(rmdformats)
library(rmarkdown)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(tibble)
library(magrittr)
library(here)
library(rmdformats)
library(rmarkdown)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(tibble)
library(magrittr)
library(here)
source(here("R/create_table_one.R"))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(rmdformats)
library(rmarkdown)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(tibble)
library(magrittr)
library(here)
source(here("R/create_table_one.R"))
# Chunk 3: remove _samples
poor_sequencing <- c("1173", "0941")
# Chunk 4: metadata
pd <- here("data/metadata/GDM_metadata_cleaned.csv") %>%
read_csv()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(rmdformats)
library(rmarkdown)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(tibble)
library(magrittr)
library(here)
source(here("R/create_table_one.R"))
# Chunk 3: remove _samples
poor_sequencing <- c("1173", "0941")
# Chunk 4: metadata
pd <- here("data/metadata/GDM_metadata_cleaned.csv") %>%
read_csv()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(rmdformats)
library(rmarkdown)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(tibble)
library(magrittr)
library(here)
source(here("R/create_table_one.R"))
# Chunk 3: remove _samples
poor_sequencing <- c("1173", "0941")
# Chunk 4: metadata
pd <- here("data/GDM_metadata_cleaned.csv") %>%
read_csv()
pd <- pd %>%
mutate(
Treatment = str_replace(
Treatment,
"Diet-Exercise",
"DietExercise"
)
)
pd %<>% dplyr::filter(!ID %in% poor_sequencing)
write_csv(pd, here("data/metadata.csv"))
# Chunk 5: define_models
mmformula_design <- formula(
~ Outcome +
FetalSex +
Cohort
)
mmformula_traits <- formula(
~0 +
Outcome +
BMI +
Age +
GestationalAge +
Birthweight +
Treatment +
metabolicSyndrome +
Ethnicity_Simplified
)
traits_colnames <- c(
"GDM",
"Uncomplicated",
"BMI",
"MaternalAge",
"GestationalAge",
"Birthweight",
"Medicated",
"Diet-Exercise",
"metabolicSyndrome",
"Ethnicity"
)
# Chunk 6: load_counts
transCounts <- read_rds(
here("data/salmon_object_GDM_grch37.rds")
)
rownames(transCounts$counts) <- rownames(transCounts$counts) %>%
str_replace(
pattern = "\\..*",
replacement = ""
)
rownames(transCounts$annotation) <- rownames(transCounts$annotation) %>%
str_replace(
pattern = "\\..*",
replacement = ""
)
# Chunk 7: tidy_colnames
colnames(transCounts$counts) <- colnames(transCounts$counts) %>%
basename()
transCounts$counts <- transCounts$counts[
, colnames(transCounts$counts) %in% pd$filename
]
colnames(transCounts$counts) <- colnames(transCounts$counts) %>%
basename() %>%
enframe(name = NULL) %>%
inner_join(
pd,
by = c("value" = "filename")
) %>%
.[["ID"]]
# Chunk 8
tx_counts <- transCounts$counts %>%
as.data.frame() %>%
rownames_to_column("transcript_id")
write_csv(tx_counts, here("data/tx_counts.csv"))
# Chunk 9
table_one <- create_table_one(pd)
table_one
# Chunk 10
libsizes <- transCounts$counts %>% colSums %>% sort()
keep <- libsizes[libsizes > 15000000]
libsize_filt_counts <- transCounts$counts[, names(keep)] %>%
as.data.frame() %>%
rownames_to_column("transcript_id")
write_csv(libsize_filt_counts, here("data/libsize_filt_counts.csv"))
# Chunk 11
pd_filt <- pd %>% dplyr::filter(ID %in% colnames(libsize_filt_counts))
table_one_filt <- create_table_one(pd)
table_one_filt
# Chunk 12
create_table_one <- function(metadata) {
require(dplyr)
require(readr)
require(stringr)
require(tidyr)
require(tibble)
require(magrittr)
uncomplicated_table <- reframe(
pd %>%
dplyr::filter(Outcome == "Uncomplicated") %>%
group_by(FetalSex),
"FetalSex" = length(FetalSex),
"BMI" = c(
round(mean(BMI), 1), round(range(BMI), 1)
),
"MaternalAge" = c(
round(mean(Age), 1), round(range(Age), 1)
),
"GestationalAge" = c(
round(mean(GestationalAge), 1), round(range(GestationalAge), 1)
),
"Ethnicity_percent" = round(
divide_by(
sum(Ethnicity_Simplified == "Caucasian"),
length(Ethnicity_Simplified)
)*100, 1
),
"Metabolic_Syndrome" = round(
divide_by(
sum(metabolicSyndrome == "Yes"),
length(metabolicSyndrome)
)*100, 1
),
"Birthweight" = c(
round(mean(Birthweight), 1), round(range(Birthweight), 1))
)
uncomplicated_table <- uncomplicated_table %>%
as.data.frame() %>%
set_rownames(c("F_mean", "F_min", "F_max",
"M_mean", "M_min", "M_max"))
uncomp_tbl <- uncomplicated_table %>%
t() %>%
as.data.frame() %>%
mutate(Female = paste0(F_mean, " (", F_min, "-", F_max, ")"),
Male = paste0(M_mean, " (", M_min, "-", M_max, ")"))
gdm_table <- reframe(
pd %>%
dplyr::filter(Outcome == "GDM") %>%
group_by(FetalSex),
"FetalSex" = length(FetalSex),
"BMI" = c(
round(mean(BMI), 1), round(range(BMI), 1)
),
"MaternalAge" = c(
round(mean(Age), 1), round(range(Age), 1)
),
"GestationalAge" = c(
round(mean(GestationalAge), 1), round(range(GestationalAge), 1)
),
"Ethnicity_percent" = round(
divide_by(
sum(Ethnicity_Simplified == "Caucasian"),
length(Ethnicity_Simplified)
)*100, 1
),
"Metabolic_Syndrome" = round(
divide_by(
sum(metabolicSyndrome == "Yes"),
length(metabolicSyndrome)
)*100, 1
),
"Birthweight" = c(
round(mean(Birthweight), 1), round(range(Birthweight), 1))
)
gdm_table <- gdm_table %>%
as.data.frame() %>%
set_rownames(c("F_mean", "F_min", "F_max",
"M_mean", "M_min", "M_max"))
gdm_table <- gdm_table %>%
t() %>%
as.data.frame() %>%
mutate(Female = paste0(F_mean, " (", F_min, "-", F_max, ")"),
Male = paste0(M_mean, " (", M_min, "-", M_max, ")"))
patient_table <- uncomp_tbl %>%
dplyr::select("Female_U" = Female,
"Male_U" = Male) %>%
rownames_to_column("id") %>%
left_join(gdm_table %>%
dplyr::select("Female_G" = Female,
"Male_G" = Male) %>%
rownames_to_column("id"),
by = "id") %>%
dplyr::select("Patient_Characteristics" = id,
"Female_Uncomplicated" = Female_U,
"Female_GDM" = Female_G,
"Male_Uncomplicated" = Male_U,
"Male_GDM" = Male_G)
patient_table[1, ] <- patient_table[1, ] %>%
lapply(function(x) {
str_replace(pattern = " \\s*\\([^\\)]+\\)", replacement = "", string = x)
})
return(patient_table)
}
renv::install("rmarkdown")
renv::snapshot()
library(rmarkdown)
renv::install("rmarkdown")
renv::snapshot()
renv::install("yaml")
renv::snapshot
renv::snapshot()
renv::snapshot()
renv::snapshot()
renv::init()
renv::snapshot()
renv::install("DT")
renv::snapshot()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(rmdformats)
library(rmarkdown)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(tibble)
library(magrittr)
library(DT)
library(here)
source(here("R/create_table_one.R"))
# Chunk 3: remove _samples
poor_sequencing <- c("1173", "0941")
# Chunk 4: metadata
pd <- here("data/GDM_metadata_cleaned.csv") %>%
read_csv()
pd <- pd %>%
mutate(
Treatment = str_replace(
Treatment,
"Diet-Exercise",
"DietExercise"
)
)
pd %<>% dplyr::filter(!ID %in% poor_sequencing)
DT::datatable(pd)
# Chunk 5
write_csv(pd, here("data/metadata.csv"))
# Chunk 6: define_models
mmformula_design <- formula(
~ Outcome +
FetalSex +
Cohort
)
# Chunk 7
mmformula_traits <- formula(
~0 +
Outcome +
BMI +
Age +
GestationalAge +
Birthweight +
Treatment +
metabolicSyndrome +
Ethnicity_Simplified
)
traits_colnames <- c(
"GDM",
"Uncomplicated",
"BMI",
"MaternalAge",
"GestationalAge",
"Birthweight",
"Medicated",
"Diet-Exercise",
"metabolicSyndrome",
"Ethnicity"
)
# Chunk 8: load_counts
transCounts <- read_rds(
here("data/salmon_object_GDM_grch37.rds")
)
rownames(transCounts$counts) <- rownames(transCounts$counts) %>%
str_replace(
pattern = "\\..*",
replacement = ""
)
rownames(transCounts$annotation) <- rownames(transCounts$annotation) %>%
str_replace(
pattern = "\\..*",
replacement = ""
)
# Chunk 9: tidy_colnames
colnames(transCounts$counts) <- colnames(transCounts$counts) %>%
basename()
transCounts$counts <- transCounts$counts[
, colnames(transCounts$counts) %in% pd$filename
]
colnames(transCounts$counts) <- colnames(transCounts$counts) %>%
basename() %>%
enframe(name = NULL) %>%
inner_join(
pd,
by = c("value" = "filename")
) %>%
.[["ID"]]
# Chunk 10
tx_counts <- transCounts$counts %>%
as.data.frame() %>%
rownames_to_column("transcript_id")
write_csv(tx_counts, here("data/tx_counts.csv"))
# Chunk 11
table_one <- create_table_one(pd)
table_one
# Chunk 12
libsizes <- transCounts$counts %>% colSums %>% sort()
keep <- libsizes[libsizes > 15000000]
libsize_filt_counts <- transCounts$counts[, names(keep)] %>%
as.data.frame() %>%
rownames_to_column("transcript_id")
write_csv(libsize_filt_counts, here("data/libsize_filt_counts.csv"))
# Chunk 13
pd_filt <- pd %>% dplyr::filter(ID %in% colnames(libsize_filt_counts))
table_one_filt <- create_table_one(pd)
table_one_filt
# Chunk 14
create_table_one <- function(metadata) {
require(dplyr)
require(readr)
require(stringr)
require(tidyr)
require(tibble)
require(magrittr)
uncomplicated_table <- reframe(
pd %>%
dplyr::filter(Outcome == "Uncomplicated") %>%
group_by(FetalSex),
"FetalSex" = length(FetalSex),
"BMI" = c(
round(mean(BMI), 1), round(range(BMI), 1)
),
"MaternalAge" = c(
round(mean(Age), 1), round(range(Age), 1)
),
"GestationalAge" = c(
round(mean(GestationalAge), 1), round(range(GestationalAge), 1)
),
"Ethnicity_percent" = round(
divide_by(
sum(Ethnicity_Simplified == "Caucasian"),
length(Ethnicity_Simplified)
)*100, 1
),
"Metabolic_Syndrome" = round(
divide_by(
sum(metabolicSyndrome == "Yes"),
length(metabolicSyndrome)
)*100, 1
),
"Birthweight" = c(
round(mean(Birthweight), 1), round(range(Birthweight), 1))
)
uncomplicated_table <- uncomplicated_table %>%
as.data.frame() %>%
set_rownames(c("F_mean", "F_min", "F_max",
"M_mean", "M_min", "M_max"))
uncomp_tbl <- uncomplicated_table %>%
t() %>%
as.data.frame() %>%
mutate(Female = paste0(F_mean, " (", F_min, "-", F_max, ")"),
Male = paste0(M_mean, " (", M_min, "-", M_max, ")"))
gdm_table <- reframe(
pd %>%
dplyr::filter(Outcome == "GDM") %>%
group_by(FetalSex),
"FetalSex" = length(FetalSex),
"BMI" = c(
round(mean(BMI), 1), round(range(BMI), 1)
),
"MaternalAge" = c(
round(mean(Age), 1), round(range(Age), 1)
),
"GestationalAge" = c(
round(mean(GestationalAge), 1), round(range(GestationalAge), 1)
),
"Ethnicity_percent" = round(
divide_by(
sum(Ethnicity_Simplified == "Caucasian"),
length(Ethnicity_Simplified)
)*100, 1
),
"Metabolic_Syndrome" = round(
divide_by(
sum(metabolicSyndrome == "Yes"),
length(metabolicSyndrome)
)*100, 1
),
"Birthweight" = c(
round(mean(Birthweight), 1), round(range(Birthweight), 1))
)
gdm_table <- gdm_table %>%
as.data.frame() %>%
set_rownames(c("F_mean", "F_min", "F_max",
"M_mean", "M_min", "M_max"))
gdm_table <- gdm_table %>%
t() %>%
as.data.frame() %>%
mutate(Female = paste0(F_mean, " (", F_min, "-", F_max, ")"),
Male = paste0(M_mean, " (", M_min, "-", M_max, ")"))
patient_table <- uncomp_tbl %>%
dplyr::select("Female_U" = Female,
"Male_U" = Male) %>%
rownames_to_column("id") %>%
left_join(gdm_table %>%
dplyr::select("Female_G" = Female,
"Male_G" = Male) %>%
rownames_to_column("id"),
by = "id") %>%
dplyr::select("Patient_Characteristics" = id,
"Female_Uncomplicated" = Female_U,
"Female_GDM" = Female_G,
"Male_Uncomplicated" = Male_U,
"Male_GDM" = Male_G)
patient_table[1, ] <- patient_table[1, ] %>%
lapply(function(x) {
str_replace(pattern = " \\s*\\([^\\)]+\\)", replacement = "", string = x)
})
return(patient_table)
}
table_one
table_one_filt
identical(table_one, table_one_filt)
libsize_filt_counts
names(keep)
libsizes
keep
renv::snapshot()
